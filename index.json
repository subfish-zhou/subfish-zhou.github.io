[{"content":"人类面临的技术难题太多了，这样下去怎么能机械飞升！不行，要加速！\n然而我太笨了，我解决不了这些问题。我打算让一个AI来执行这个任务。从数学开始吧，数学比较简单纯粹。\n但是AI更笨，它目前还并不会推理，更别提做数学了。\n哦不，OpenAI的GPT-f已经可以做一些IMO的数学题了。参见Formal Mathematics Statement Curriculum Learning。但是IMO的高中数学，距离数学的最前沿，尚有一段距离。\n人类的逻辑太跳脱，语言太模糊，难保不会出岔子。计算机学数学是用精确的程序语言表述的，每一个定理每一个证明步骤都可以用精确的方式验证。太好了，这样数学就再也不会出错了。而且，机械化也不代表计算机不会拥有强大的直觉和灵感。人顶上这个肉球能干的事，铁块也不是不能干。\n但是目前遇到了一个困难。人写了浩如烟海的论文，没法一个一个变成精确的程序语言，教给计算机。但是我希望让它站在人类的肩膀上做新的数学。所以一个新的想法出现了，它叫做自动形式化。通过机器翻译的手段，把人类数学语言翻译成形式化语言。\n当它学会了人类的数学之后，我们再教他推理。在知识库上应用（分层）强化学习是一个可能的手段。我们还可以充分探索数学知识嵌入的技术，让它能够洞悉理论的含义，赋予它直觉和灵感。\n目前人类还在第一步，也就是自动形式化。现在地球上只有唯一一个组发的两篇论文（在这里和这里）在研究这个事情，此外Google Brain。所以天赐会议灌水良机，我打算尝试一下。我正在做一个数据集，把人类语言翻译到Lean上。\n我希望能有更多人参与到这个项目中，它是有偿的，但可能不多。阁下若有兴趣，请给我发邮件subfishzhou@gmail.com。如果你了解深度学习，强化学习，类型论，Lean语言等等，那就更好了。\n 我目前的工作大概是这样：有一些自然语言数学文本库，比如ProofWiki、NatrualProofs，它们是用LaTeX写成的。还有Lean的定理库Mathlib。我现在打算手动对齐它们。\n我用一道IMO数学题作为数据集的例子（它没有写证明）：\n\u0026#34;propositions\u0026#34;:[ { \u0026#34;id\u0026#34;: 0, \u0026#34;title\u0026#34;:\u0026#34;imo_1983_p6\u0026#34;, \u0026#34;contents\u0026#34;:{ \u0026#34;natrual\u0026#34;:[ \u0026#34;Let $a$, $b$ and $c$ be the lengths of the sides of a triangle.\u0026#34;, \u0026#34;then we have $$0 ≤ a^2 * b * (a - b) + b^2 * c * (b - c) + c^2 * a * (c - a)$$.\u0026#34; ], \u0026#34;Lean\u0026#34;:[ \u0026#34;(a b c : ℝ)\u0026#34;, \u0026#34;(h₀ : 0 \u0026lt; a ∧ 0 \u0026lt; b ∧ 0 \u0026lt; c)\u0026#34;, \u0026#34;(h₁ : c \u0026lt; a + b)\u0026#34;, \u0026#34;(h₂ : b \u0026lt; a + c)\u0026#34;, \u0026#34;(h₃ : a \u0026lt; b + c) :\u0026#34;, \u0026#34;0 ≤ a^2 * b * (a - b) + b^2 * c * (b - c) + c^2 * a * (c - a)\u0026#34; ] }, \u0026#34;proofs\u0026#34;:{ \u0026#34;natrual\u0026#34;:[ \u0026#34;/\u0026#34; ], \u0026#34;Lean\u0026#34;:[ \u0026#34;sorry\u0026#34; ] } } ] ","permalink":"https://subfish-zhou.github.io/posts/automath/","summary":"一个招工广告，但或许待遇微薄","title":"数学自动化：一个技术路径以及一个招募启事"}]